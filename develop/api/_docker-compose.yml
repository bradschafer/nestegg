version: "3.4"
services:
  api:
    build: #location and filename for this api build
      context: .
      dockerfile: dockerfile 
      args:
          - NODE_ENV=development
    image: api:1.0 #name is built from this with tag   
    command: ../node_modules/.bin/nodemon --inspect=0.0.0.0:9229 ./bin/www #override production 
    volumes:
      - .:/opt/app:delegated
      # bind-mounting these two files in will let you add packages during development without rebuilding
      # for example, to add bower to your app while developing, just install it inside the container
      # and then nodemon will restart. Your changes will last until you "docker-compose down" and will
      # be saved on host for next build
      # docker-compose exec api npm install --save bower
      - ./package.json:/opt/package.json
      - ./package-lock.json:/opt/package-lock.json
      # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # this will overwrite the default node_modules dir in container so it won't conflict with our
      # /opt/node_modules location. Thanks to PR from @brnluiz
      - notused:/opt/app/node_modules
    # ports:
    #  - 3000:3000
    labels: 
    # labels here for compose-up and in deploy for swarm
      - traefik.enable=true
      - traefik.port=3000
      - traefik.docker.network=web
      - traefik.frontend.rule=Host:api.localhost    
    environment:
      NODE_DB_PASSWORD_FILE: /run/secrets/db_password_v1
      MONGODB_SERVICE_SERVICE_HOST: "mongodb1"  
    restart: on-failure
    secrets:
      - db_password_v1  
    # depends_on:
    #  - mongodb
    networks:
     - mongo
     - web
    logging:
      options:
        max-size: "500k" 


  mongodb:
    image: mongo:4.0
    command: mongod --smallfiles --logpath=/dev/null # --quiet 
    # container_name: "mongodbnest1"
    # restart: always
    environment:
    - MONGO_DATA_DIR=/data/db
    - MONGO_LOG_DIR=/dev/null
    volumes:
    - ./../../data/api/mongo/db:/data/db
    labels: 
    # labels here for compose-up and in deploy for swarm
      - traefik.enable=true
      - traefik.port=27017
      - traefik.docker.network=web
      - traefik.frontend.rule=Host:mongo.localhost    
    healthcheck:
      test: echo 'db.stats().ok' | mongo localhost:27017/local --quiet
      interval: 30s
      timeout: 5s
      retries: 12
    networks:
      - mongo
      - web
    ports:
      - 27017:27017
    logging:
          options:
            max-size: "500k" 


volumes:
  notused: #node_modules fix
secrets:
  db_password_v1:
    file: ./../../secrets/db_password.txt      
networks:
  mongo: {}
  web:
    external: true      
